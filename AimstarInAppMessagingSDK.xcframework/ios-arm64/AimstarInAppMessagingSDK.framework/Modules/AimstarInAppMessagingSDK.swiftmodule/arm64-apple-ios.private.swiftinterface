// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AimstarInAppMessagingSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import AimstarInAppMessagingSDK
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol AimstarInAppMessagingDelegate : AnyObject {
  func messageDismissed(_ message: AimstarInAppMessagingSDK.InAppMessage)
  func messageClicked(_ message: AimstarInAppMessagingSDK.InAppMessage)
  func messageDetectedForDisplay(_ message: AimstarInAppMessagingSDK.InAppMessage)
  func messageError(_ message: AimstarInAppMessagingSDK.InAppMessage?, error: any Swift.Error)
}
@_hasMissingDesignatedInitializers public class AimstarInAppMessaging {
  weak public var delegate: (any AimstarInAppMessagingSDK.AimstarInAppMessagingDelegate)?
  public var isStrictLogin: Swift.Bool
  public var customerId: Swift.String?
  public static let shared: AimstarInAppMessagingSDK.AimstarInAppMessaging
  public func setup(apiKey: Swift.String, tenantId: Swift.String)
  public func setup(apiKey: Swift.String, tenantId: Swift.String, apiHost: Swift.String)
  public func fetch(screenName: Swift.String)
  @objc deinit
}
public enum HTTPMethod : Swift.String {
  case get, post
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public struct InAppMessage : Swift.Decodable {
  public init(from decoder: any Swift.Decoder) throws
}
extension AimstarInAppMessagingSDK.HTTPMethod : Swift.Equatable {}
extension AimstarInAppMessagingSDK.HTTPMethod : Swift.Hashable {}
extension AimstarInAppMessagingSDK.HTTPMethod : Swift.RawRepresentable {}
